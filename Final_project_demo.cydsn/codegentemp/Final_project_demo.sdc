# THIS FILE IS AUTOMATICALLY GENERATED
# Project: C:\Users\Ryan Haque\Documents\PSoC Creator\Final_project_demo.cydsn\Final_project_demo.cyprj
# Date: Wed, 09 Dec 2020 08:21:54 GMT
#set_units -time ns
create_clock -name {CyILO} -period 31250 -waveform {0 15625} [list [get_pins {ClockBlock/ilo}]]
create_clock -name {CyClk_LF} -period 31250 -waveform {0 15625} [list [get_pins {ClockBlock/lfclk}]]
create_clock -name {CyFLL} -period 10 -waveform {0 5} [list [get_pins {ClockBlock/fll}]]
create_clock -name {CyClk_HF0} -period 10 -waveform {0 5} [list [get_pins {ClockBlock/hfclk_0}]]
create_clock -name {CyClk_Fast} -period 10 -waveform {0 5} [list [get_pins {ClockBlock/fastclk}]]
create_clock -name {CyClk_Peri} -period 20 -waveform {0 10} [list [get_pins {ClockBlock/periclk}]]
create_generated_clock -name {CyClk_Slow} -source [get_pins {ClockBlock/periclk}] -edges {1 2 3} [list [get_pins {ClockBlock/slowclk}]]
create_generated_clock -name {ADC_1_intSarClock} -source [get_pins {ClockBlock/periclk}] -edges {1 51 101} [list [get_pins {ClockBlock/ff_div_49}]]
create_generated_clock -name {UART_1_SCBCLK} -source [get_pins {ClockBlock/periclk}] -edges {1 37 73} [list [get_pins {ClockBlock/ff_div_5}]]
create_clock -name {CyPeriClk_App} -period 20 -waveform {0 10} [list [get_pins {ClockBlock/periclk_App}]]
create_generated_clock -name {Clk_33MHz_App} -source [get_pins {ClockBlock/periclk_App}] -edges {1 3 5} [list [get_pins {ClockBlock/udb_div_0}]]
create_clock -name {CyIMO} -period 125 -waveform {0 62.5} [list [get_pins {ClockBlock/imo}]]


# Component constraints for C:\Users\Ryan Haque\Documents\PSoC Creator\Final_project_demo.cydsn\TopDesign\TopDesign.cysch
# Project: C:\Users\Ryan Haque\Documents\PSoC Creator\Final_project_demo.cydsn\Final_project_demo.cyprj
# Date: Wed, 09 Dec 2020 08:21:31 GMT
# GraphicLCDIntf_1
# False paths present for both 8 and 16 bits Graphic LCD Interface configurations 
expr {(8) == 8 ?
   [set_false_path -from [get_pins {\GraphicLCDIntf_1:GraphLcd8:Lsb\/p_out_0}] -to [get_pins {\GraphicLCDIntf_1:LsbReg\/status_0}]] : \
   [set_false_path -from [get_pins {\GraphicLCDIntf_1:GraphLcd16:Lsb\/p_out_0}] -to [get_pins {\GraphicLCDIntf_1:LsbReg\/status_0}]]} 
   
expr {(8) == 8 ?
   [set_false_path -from [get_pins {\GraphicLCDIntf_1:GraphLcd8:Lsb\/p_out_1}] -to [get_pins {\GraphicLCDIntf_1:LsbReg\/status_1}]] : \
   [set_false_path -from [get_pins {\GraphicLCDIntf_1:GraphLcd16:Lsb\/p_out_1}] -to [get_pins {\GraphicLCDIntf_1:LsbReg\/status_1}]]} 
   
expr {(8) == 8 ?
   [set_false_path -from [get_pins {\GraphicLCDIntf_1:GraphLcd8:Lsb\/p_out_2}] -to [get_pins {\GraphicLCDIntf_1:LsbReg\/status_2}]] : \
   [set_false_path -from [get_pins {\GraphicLCDIntf_1:GraphLcd16:Lsb\/p_out_2}] -to [get_pins {\GraphicLCDIntf_1:LsbReg\/status_2}]]} 
   
expr {(8) == 8 ?
   [set_false_path -from [get_pins {\GraphicLCDIntf_1:GraphLcd8:Lsb\/p_out_3}] -to [get_pins {\GraphicLCDIntf_1:LsbReg\/status_3}]] : \
   [set_false_path -from [get_pins {\GraphicLCDIntf_1:GraphLcd16:Lsb\/p_out_3}] -to [get_pins {\GraphicLCDIntf_1:LsbReg\/status_3}]]} 
   
expr {(8) == 8 ?
   [set_false_path -from [get_pins {\GraphicLCDIntf_1:GraphLcd8:Lsb\/p_out_4}] -to [get_pins {\GraphicLCDIntf_1:LsbReg\/status_4}]] : \
   [set_false_path -from [get_pins {\GraphicLCDIntf_1:GraphLcd16:Lsb\/p_out_4}] -to [get_pins {\GraphicLCDIntf_1:LsbReg\/status_4}]]} 
   
expr {(8) == 8 ?
   [set_false_path -from [get_pins {\GraphicLCDIntf_1:GraphLcd8:Lsb\/p_out_5}] -to [get_pins {\GraphicLCDIntf_1:LsbReg\/status_5}]] : \
   [set_false_path -from [get_pins {\GraphicLCDIntf_1:GraphLcd16:Lsb\/p_out_5}] -to [get_pins {\GraphicLCDIntf_1:LsbReg\/status_5}]]} 
   
expr {(8) == 8 ?
   [set_false_path -from [get_pins {\GraphicLCDIntf_1:GraphLcd8:Lsb\/p_out_6}] -to [get_pins {\GraphicLCDIntf_1:LsbReg\/status_6}]] : \
   [set_false_path -from [get_pins {\GraphicLCDIntf_1:GraphLcd16:Lsb\/p_out_6}] -to [get_pins {\GraphicLCDIntf_1:LsbReg\/status_6}]]} 
 
expr {(8) == 8 ?
   [set_false_path -from [get_pins {\GraphicLCDIntf_1:GraphLcd8:Lsb\/p_out_7}] -to [get_pins {\GraphicLCDIntf_1:LsbReg\/status_7}]] : \
   [set_false_path -from [get_pins {\GraphicLCDIntf_1:GraphLcd16:Lsb\/p_out_7}] -to [get_pins {\GraphicLCDIntf_1:LsbReg\/status_7}]]} 
   
# False paths present only for 16 bits Graphic LCD Interface configuration
expr {(8) == 16 ?
   [set_false_path -from [get_pins {\GraphicLCDIntf_1:GraphLcd16:Msb\/p_out_0}] -to [get_pins {\GraphicLCDIntf_1:GraphLcd16:MsbReg\/status_0}]] : {}}
   
expr {(8) == 16 ?
   [set_false_path -from [get_pins {\GraphicLCDIntf_1:GraphLcd16:Msb\/p_out_1}] -to [get_pins {\GraphicLCDIntf_1:GraphLcd16:MsbReg\/status_1}]] : {}}
   
expr {(8) == 16 ?
   [set_false_path -from [get_pins {\GraphicLCDIntf_1:GraphLcd16:Msb\/p_out_2}] -to [get_pins {\GraphicLCDIntf_1:GraphLcd16:MsbReg\/status_2}]] : {}}

expr {(8) == 16 ?
   [set_false_path -from [get_pins {\GraphicLCDIntf_1:GraphLcd16:Msb\/p_out_3}] -to [get_pins {\GraphicLCDIntf_1:GraphLcd16:MsbReg\/status_3}]] : {}}
   
expr {(8) == 16 ?
   [set_false_path -from [get_pins {\GraphicLCDIntf_1:GraphLcd16:Msb\/p_out_4}] -to [get_pins {\GraphicLCDIntf_1:GraphLcd16:MsbReg\/status_4}]] : {}}
   
expr {(8) == 16 ?
   [set_false_path -from [get_pins {\GraphicLCDIntf_1:GraphLcd16:Msb\/p_out_5}] -to [get_pins {\GraphicLCDIntf_1:GraphLcd16:MsbReg\/status_5}]] : {}}
   
expr {(8) == 16 ?
   [set_false_path -from [get_pins {\GraphicLCDIntf_1:GraphLcd16:Msb\/p_out_6}] -to [get_pins {\GraphicLCDIntf_1:GraphLcd16:MsbReg\/status_6}]] : {}}
   
expr {(8) == 16 ?
   [set_false_path -from [get_pins {\GraphicLCDIntf_1:GraphLcd16:Msb\/p_out_7}] -to [get_pins {\GraphicLCDIntf_1:GraphLcd16:MsbReg\/status_7}]] : {}}

